{
  "version": 3,
  "sources": ["../../vuetify/src/components/VImg/VImg.tsx", "../../vuetify/src/components/VResponsive/VResponsive.tsx"],
  "sourcesContent": ["import './VImg.sass'\n\n// Components\nimport { VResponsive } from '@/components/VResponsive'\n\n// Directives\nimport intersect from '@/directives/intersect'\n\n// Composables\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\n\n// Utilities\nimport {\n  computed,\n  nextTick,\n  onBeforeMount,\n  ref,\n  vShow,\n  watch,\n  withDirectives,\n} from 'vue'\nimport {\n  convertToUnit,\n  genericComponent,\n  SUPPORTS_INTERSECTION,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\n// not intended for public use, this is passed in by vuetify-loader\nexport interface srcObject {\n  src?: string\n  srcset?: string\n  lazySrc?: string\n  aspect: number\n}\n\nexport type VImgSlots = {\n  default: []\n  placeholder: []\n  error: []\n  sources: []\n}\n\nexport const VImg = genericComponent<VImgSlots>()({\n  name: 'VImg',\n\n  directives: { intersect },\n\n  props: {\n    aspectRatio: [String, Number],\n    alt: String,\n    cover: Boolean,\n    eager: Boolean,\n    gradient: String,\n    lazySrc: String,\n    options: {\n      type: Object as PropType<IntersectionObserverInit>,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      default: () => ({\n        root: undefined,\n        rootMargin: undefined,\n        threshold: undefined,\n      }),\n    },\n    sizes: String,\n    src: {\n      type: [String, Object] as PropType<string | srcObject>,\n      default: '',\n    },\n    srcset: String,\n    width: [String, Number],\n\n    ...makeTransitionProps(),\n  },\n\n  emits: {\n    loadstart: (event: string | undefined) => true,\n    load: (event: string | undefined) => true,\n    error: (event: string | undefined) => true,\n  },\n\n  setup (props, { emit, slots }) {\n    const currentSrc = ref('') // Set from srcset\n    const image = ref<HTMLImageElement>()\n    const state = ref<'idle' | 'loading' | 'loaded' | 'error'>(props.eager ? 'loading' : 'idle')\n    const naturalWidth = ref<number>()\n    const naturalHeight = ref<number>()\n\n    const normalisedSrc = computed<srcObject>(() => {\n      return props.src && typeof props.src === 'object'\n        ? {\n          src: props.src.src,\n          srcset: props.srcset || props.src.srcset,\n          lazySrc: props.lazySrc || props.src.lazySrc,\n          aspect: Number(props.aspectRatio || props.src.aspect || 0),\n        } : {\n          src: props.src,\n          srcset: props.srcset,\n          lazySrc: props.lazySrc,\n          aspect: Number(props.aspectRatio || 0),\n        }\n    })\n    const aspectRatio = computed(() => {\n      return normalisedSrc.value.aspect || naturalWidth.value! / naturalHeight.value! || 0\n    })\n\n    watch(() => props.src, () => {\n      init(state.value !== 'idle')\n    })\n    watch(aspectRatio, (val, oldVal) => {\n      if (!val && oldVal && image.value) {\n        pollForSize(image.value)\n      }\n    })\n\n    // TODO: getSrc when window width changes\n\n    onBeforeMount(() => init())\n\n    function init (isIntersecting?: boolean) {\n      if (props.eager && isIntersecting) return\n      if (\n        SUPPORTS_INTERSECTION &&\n        !isIntersecting &&\n        !props.eager\n      ) return\n\n      state.value = 'loading'\n\n      if (normalisedSrc.value.lazySrc) {\n        const lazyImg = new Image()\n        lazyImg.src = normalisedSrc.value.lazySrc\n        pollForSize(lazyImg, null)\n      }\n\n      if (!normalisedSrc.value.src) return\n\n      nextTick(() => {\n        emit('loadstart', image.value?.currentSrc || normalisedSrc.value.src)\n\n        if (image.value?.complete) {\n          if (!image.value.naturalWidth) {\n            onError()\n          }\n\n          if (state.value === 'error') return\n\n          if (!aspectRatio.value) pollForSize(image.value, null)\n          onLoad()\n        } else {\n          if (!aspectRatio.value) pollForSize(image.value!)\n          getSrc()\n        }\n      })\n    }\n\n    function onLoad () {\n      getSrc()\n      state.value = 'loaded'\n      emit('load', image.value?.currentSrc || normalisedSrc.value.src)\n    }\n\n    function onError () {\n      state.value = 'error'\n      emit('error', image.value?.currentSrc || normalisedSrc.value.src)\n    }\n\n    function getSrc () {\n      const img = image.value\n      if (img) currentSrc.value = img.currentSrc || img.src\n    }\n\n    let timer = -1\n    function pollForSize (img: HTMLImageElement, timeout: number | null = 100) {\n      const poll = () => {\n        clearTimeout(timer)\n        const { naturalHeight: imgHeight, naturalWidth: imgWidth } = img\n\n        if (imgHeight || imgWidth) {\n          naturalWidth.value = imgWidth\n          naturalHeight.value = imgHeight\n        } else if (!img.complete && state.value === 'loading' && timeout != null) {\n          timer = window.setTimeout(poll, timeout)\n        } else if (img.currentSrc.endsWith('.svg') || img.currentSrc.startsWith('data:image/svg+xml')) {\n          naturalWidth.value = 1\n          naturalHeight.value = 1\n        }\n      }\n\n      poll()\n    }\n\n    const containClasses = computed(() => ({\n      'v-img__img--cover': props.cover,\n      'v-img__img--contain': !props.cover,\n    }))\n\n    const __image = () => {\n      if (!normalisedSrc.value.src || state.value === 'idle') return null\n\n      const img = (\n        <img\n          class={['v-img__img', containClasses.value]}\n          src={ normalisedSrc.value.src }\n          srcset={ normalisedSrc.value.srcset }\n          alt={ props.alt }\n          sizes={ props.sizes }\n          ref={ image }\n          onLoad={ onLoad }\n          onError={ onError }\n        />\n      )\n\n      const sources = slots.sources?.()\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          {\n            withDirectives(\n              sources\n                ? <picture class=\"v-img__picture\">{ sources }{ img }</picture>\n                : img,\n              [[vShow, state.value === 'loaded']]\n            )\n          }\n        </MaybeTransition>\n      )\n    }\n\n    const __preloadImage = () => (\n      <MaybeTransition transition={ props.transition }>\n        { normalisedSrc.value.lazySrc && state.value !== 'loaded' && (\n          <img\n            class={['v-img__img', 'v-img__img--preload', containClasses.value]}\n            src={ normalisedSrc.value.lazySrc }\n            alt={ props.alt }\n          />\n        )}\n      </MaybeTransition>\n    )\n\n    const __placeholder = () => {\n      if (!slots.placeholder) return null\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          { (state.value === 'loading' || (state.value === 'error' && !slots.error)) &&\n          <div class=\"v-img__placeholder\">{ slots.placeholder() }</div>\n          }\n        </MaybeTransition>\n      )\n    }\n\n    const __error = () => {\n      if (!slots.error) return null\n\n      return (\n        <MaybeTransition transition={ props.transition } appear>\n          { state.value === 'error' &&\n            <div class=\"v-img__error\">{ slots.error() }</div>\n          }\n        </MaybeTransition>\n      )\n    }\n\n    const __gradient = () => {\n      if (!props.gradient) return null\n\n      return <div class=\"v-img__gradient\" style={{ backgroundImage: `linear-gradient(${props.gradient})` }} />\n    }\n\n    const isBooted = ref(false)\n    {\n      const stop = watch(aspectRatio, val => {\n        if (val) {\n          // Doesn't work with nextTick, idk why\n          requestAnimationFrame(() => {\n            requestAnimationFrame(() => {\n              isBooted.value = true\n            })\n          })\n          stop()\n        }\n      })\n    }\n\n    useRender(() => (\n      <VResponsive\n        class={[\n          'v-img',\n          { 'v-img--booting': !isBooted.value },\n        ]}\n        style={{ width: convertToUnit(props.width === 'auto' ? naturalWidth.value : props.width) }}\n        aspectRatio={ aspectRatio.value }\n        aria-label={ props.alt }\n        role={ props.alt ? 'img' : undefined }\n        v-intersect={[{\n          handler: init,\n          options: props.options,\n        }, null, ['once']]}\n      >{{\n        additional: () => (\n          <>\n            <__image />\n            <__preloadImage />\n            <__gradient />\n            <__placeholder />\n            <__error />\n          </>\n        ),\n        default: slots.default,\n      }}</VResponsive>\n    ))\n\n    return {\n      currentSrc,\n      image,\n      state,\n      naturalWidth,\n      naturalHeight,\n    }\n  },\n})\n\nexport type VImg = InstanceType<typeof VImg>\n", "// Styles\nimport './VResponsive.sass'\n\n// Composables\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, useRender } from '@/util'\n\nexport type VResponsiveSlots = {\n  default: []\n  additional: []\n}\n\nexport function useAspectStyles (props: { aspectRatio?: string | number }) {\n  return {\n    aspectStyles: computed(() => {\n      const ratio = Number(props.aspectRatio)\n\n      return ratio\n        ? { paddingBottom: String(1 / ratio * 100) + '%' }\n        : undefined\n    }),\n  }\n}\n\nexport const VResponsive = genericComponent<VResponsiveSlots>()({\n  name: 'VResponsive',\n\n  props: {\n    aspectRatio: [String, Number],\n    contentClass: String,\n\n    ...makeDimensionProps(),\n  },\n\n  setup (props, { slots }) {\n    const { aspectStyles } = useAspectStyles(props)\n    const { dimensionStyles } = useDimension(props)\n\n    useRender(() => (\n      <div class=\"v-responsive\" style={ dimensionStyles.value }>\n        <div class=\"v-responsive__sizer\" style={ aspectStyles.value } />\n\n        { slots.additional?.() }\n\n        { slots.default && (\n          <div class={['v-responsive__content', props.contentClass]}>{ slots.default() }</div>\n        )}\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VResponsive = InstanceType<typeof VResponsive>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA;;;ACCA,OAAA;AAcO,SAASA,gBAAiBC,OAA0C;AACzE,SAAO;IACLC,cAAcC,SAAS,MAAM;AAC3B,YAAMC,QAAQC,OAAOJ,MAAMK,WAAW;AAEtC,aAAOF,QACH;QAAEG,eAAeC,OAAO,IAAIJ,QAAQ,GAAG,IAAI;MAAI,IAC/CK;IACN,CAAC;EACH;AACF;AAEO,IAAMC,cAAcC,iBAAgB,EAAqB;EAC9DC,MAAM;EAENX,OAAO;IACLK,aAAa,CAACE,QAAQH,MAAM;IAC5BQ,cAAcL;IAEd,GAAGM,mBAAkB;EACvB;EAEAC,MAAOd,OAAKe,MAAa;AAAA,QAAX;MAAEC;IAAM,IAACD;AACrB,UAAM;MAAEd;IAAa,IAAIF,gBAAgBC,KAAK;AAC9C,UAAM;MAAEiB;IAAgB,IAAIC,aAAalB,KAAK;AAE9CmB,cAAU,MAAA;;AAAAC,yBAAA,OAAA;QAAA,SACG;QAAc,SAASH,gBAAgBI;MAAK,GAAA,CAAAD,YAAA,OAAA;QAAA,SAC1C;QAAqB,SAASnB,aAAaoB;MAAK,GAAA,IAAA,IAEzDL,WAAMM,eAANN,gCAEAA,MAAMO,WAAOH,YAAA,OAAA;QAAA,SACD,CAAC,yBAAyBpB,MAAMY,YAAY;MAAC,GAAA,CAAII,MAAMO,QAAO,CAAE,CAAA,CAC7E,CAAA;KAEJ;AAED,WAAO,CAAC;EACV;AACF,CAAC;;;ADTM,IAAMC,OAAOC,iBAAgB,EAAc;EAChDC,MAAM;EAENC,YAAY;IAAEC;EAAU;EAExBC,OAAO;IACLC,aAAa,CAACC,QAAQC,MAAM;IAC5BC,KAAKF;IACLG,OAAOC;IACPC,OAAOD;IACPE,UAAUN;IACVO,SAASP;IACTQ,SAAS;MACPC,MAAMC;MAGNC,SAASA,OAAO;QACdC,MAAMC;QACNC,YAAYD;QACZE,WAAWF;MACb;IACF;IACAG,OAAOhB;IACPiB,KAAK;MACHR,MAAM,CAACT,QAAQU,MAAM;MACrBC,SAAS;IACX;IACAO,QAAQlB;IACRmB,OAAO,CAACnB,QAAQC,MAAM;IAEtB,GAAGmB,oBAAmB;EACxB;EAEAC,OAAO;IACLC,WAAYC,WAA8B;IAC1CC,MAAOD,WAA8B;IACrCE,OAAQF,WAA8B;EACxC;EAEAG,MAAO5B,OAAK6B,MAAmB;AAAA,QAAjB;MAAEC;MAAMC;IAAM,IAACF;AAC3B,UAAMG,aAAaC,IAAI,EAAE;AACzB,UAAMC,QAAQD,IAAG;AACjB,UAAME,QAAQF,IAA6CjC,MAAMO,QAAQ,YAAY,MAAM;AAC3F,UAAM6B,eAAeH,IAAG;AACxB,UAAMI,gBAAgBJ,IAAG;AAEzB,UAAMK,gBAAgBC,SAAoB,MAAM;AAC9C,aAAOvC,MAAMmB,OAAO,OAAOnB,MAAMmB,QAAQ,WACrC;QACAA,KAAKnB,MAAMmB,IAAIA;QACfC,QAAQpB,MAAMoB,UAAUpB,MAAMmB,IAAIC;QAClCX,SAAST,MAAMS,WAAWT,MAAMmB,IAAIV;QACpC+B,QAAQrC,OAAOH,MAAMC,eAAeD,MAAMmB,IAAIqB,UAAU,CAAC;MAC3D,IAAI;QACFrB,KAAKnB,MAAMmB;QACXC,QAAQpB,MAAMoB;QACdX,SAAST,MAAMS;QACf+B,QAAQrC,OAAOH,MAAMC,eAAe,CAAC;MACvC;IACJ,CAAC;AACD,UAAMA,cAAcsC,SAAS,MAAM;AACjC,aAAOD,cAAcG,MAAMD,UAAUJ,aAAaK,QAASJ,cAAcI,SAAU;IACrF,CAAC;AAEDC,UAAM,MAAM1C,MAAMmB,KAAK,MAAM;AAC3BwB,WAAKR,MAAMM,UAAU,MAAM;IAC7B,CAAC;AACDC,UAAMzC,aAAa,CAAC2C,KAAKC,WAAW;AAClC,UAAI,CAACD,OAAOC,UAAUX,MAAMO,OAAO;AACjCK,oBAAYZ,MAAMO,KAAK;MACzB;IACF,CAAC;AAIDM,kBAAc,MAAMJ,KAAI,CAAE;AAE1B,aAASA,KAAMK,gBAA0B;AACvC,UAAIhD,MAAMO,SAASyC;AAAgB;AACnC,UACEC,yBACA,CAACD,kBACD,CAAChD,MAAMO;AACP;AAEF4B,YAAMM,QAAQ;AAEd,UAAIH,cAAcG,MAAMhC,SAAS;AAC/B,cAAMyC,UAAU,IAAIC,MAAK;AACzBD,gBAAQ/B,MAAMmB,cAAcG,MAAMhC;AAClCqC,oBAAYI,SAAS,IAAI;MAC3B;AAEA,UAAI,CAACZ,cAAcG,MAAMtB;AAAK;AAE9BiC,eAAS,MAAM;;AACbtB,aAAK,eAAaI,WAAMO,UAANP,mBAAaF,eAAcM,cAAcG,MAAMtB,GAAG;AAEpE,aAAIe,WAAMO,UAANP,mBAAamB,UAAU;AACzB,cAAI,CAACnB,MAAMO,MAAML,cAAc;AAC7BkB,oBAAO;UACT;AAEA,cAAInB,MAAMM,UAAU;AAAS;AAE7B,cAAI,CAACxC,YAAYwC;AAAOK,wBAAYZ,MAAMO,OAAO,IAAI;AACrDc,iBAAM;QACR,OAAO;AACL,cAAI,CAACtD,YAAYwC;AAAOK,wBAAYZ,MAAMO,KAAK;AAC/Ce,iBAAM;QACR;MACF,CAAC;IACH;AAEA,aAASD,SAAU;;AACjBC,aAAM;AACNrB,YAAMM,QAAQ;AACdX,WAAK,UAAQI,WAAMO,UAANP,mBAAaF,eAAcM,cAAcG,MAAMtB,GAAG;IACjE;AAEA,aAASmC,UAAW;;AAClBnB,YAAMM,QAAQ;AACdX,WAAK,WAASI,WAAMO,UAANP,mBAAaF,eAAcM,cAAcG,MAAMtB,GAAG;IAClE;AAEA,aAASqC,SAAU;AACjB,YAAMC,MAAMvB,MAAMO;AAClB,UAAIgB;AAAKzB,mBAAWS,QAAQgB,IAAIzB,cAAcyB,IAAItC;IACpD;AAEA,QAAIuC,QAAQ;AACZ,aAASZ,YAAaW,KAAqD;AAAA,UAA9BE,UAAsBC,UAAAC,SAAA,KAAAD,UAAA,OAAA7C,SAAA6C,UAAA,KAAG;AACpE,YAAME,OAAOA,MAAM;AACjBC,qBAAaL,KAAK;AAClB,cAAM;UAAErB,eAAe2B;UAAW5B,cAAc6B;QAAS,IAAIR;AAE7D,YAAIO,aAAaC,UAAU;AACzB7B,uBAAaK,QAAQwB;AACrB5B,wBAAcI,QAAQuB;QACxB,WAAW,CAACP,IAAIJ,YAAYlB,MAAMM,UAAU,aAAakB,WAAW,MAAM;AACxED,kBAAQQ,OAAOC,WAAWL,MAAMH,OAAO;QACzC,WAAWF,IAAIzB,WAAWoC,SAAS,MAAM,KAAKX,IAAIzB,WAAWqC,WAAW,oBAAoB,GAAG;AAC7FjC,uBAAaK,QAAQ;AACrBJ,wBAAcI,QAAQ;QACxB;MACF;AAEAqB,WAAI;IACN;AAEA,UAAMQ,iBAAiB/B,SAAS,OAAO;MACrC,qBAAqBvC,MAAMK;MAC3B,uBAAuB,CAACL,MAAMK;IAChC,EAAE;AAEF,UAAMkE,UAAUA,MAAM;;AACpB,UAAI,CAACjC,cAAcG,MAAMtB,OAAOgB,MAAMM,UAAU;AAAQ,eAAO;AAE/D,YAAMgB,MAAGe,YAAA,OAAA;QAAA,SAEE,CAAC,cAAcF,eAAe7B,KAAK;QAAC,OACrCH,cAAcG,MAAMtB;QAAG,UACpBmB,cAAcG,MAAMrB;QAAM,OAC7BpB,MAAMI;QAAG,SACPJ,MAAMkB;QAAK,OACbgB;QAAK,UACFqB;QAAM,WACLD;MAAO,GAAA,IAAA;AAIrB,YAAMmB,WAAU1C,WAAM0C,YAAN1C;AAEhB,aAAAyC,YAAAE,iBAAA;QAAA,cACgC1E,MAAM2E;QAAU,UAAA;MAAA,GAAA;QAAA9D,SAAAA,MAAA,CAE1C+D,eACEH,UAAOD,YAAA,WAAA;UAAA,SACY;QAAgB,GAAA,CAAGC,SAAWhB,GAAG,CAAA,IAChDA,KACJ,CAAC,CAACoB,OAAO1C,MAAMM,UAAU,QAAQ,CAAC,CAAC,CACpC;MAAA,CAAA;IAIT;AAEA,UAAMqC,iBAAiBA,MAAAN,YAAAE,iBAAA;MAAA,cACS1E,MAAM2E;IAAU,GAAA;MAAA9D,SAAAA,MAAA,CAC1CyB,cAAcG,MAAMhC,WAAW0B,MAAMM,UAAU,YAAQ+B,YAAA,OAAA;QAAA,SAE9C,CAAC,cAAc,uBAAuBF,eAAe7B,KAAK;QAAC,OAC5DH,cAAcG,MAAMhC;QAAO,OAC3BT,MAAMI;MAAG,GAAA,IAAA,CAElB;IAAA,CAAA;AAIL,UAAM2E,gBAAgBA,MAAM;AAC1B,UAAI,CAAChD,MAAMiD;AAAa,eAAO;AAE/B,aAAAR,YAAAE,iBAAA;QAAA,cACgC1E,MAAM2E;QAAU,UAAA;MAAA,GAAA;QAAA9D,SAAAA,MAAA,EACzCsB,MAAMM,UAAU,aAAcN,MAAMM,UAAU,WAAW,CAACV,MAAMJ,UAAM6C,YAAA,OAAA;UAAA,SAC9D;QAAoB,GAAA,CAAGzC,MAAMiD,YAAW,CAAE,CAAA,CAAQ;MAAA,CAAA;IAInE;AAEA,UAAMC,UAAUA,MAAM;AACpB,UAAI,CAAClD,MAAMJ;AAAO,eAAO;AAEzB,aAAA6C,YAAAE,iBAAA;QAAA,cACgC1E,MAAM2E;QAAU,UAAA;MAAA,GAAA;QAAA9D,SAAAA,MAAA,CAC1CsB,MAAMM,UAAU,WAAO+B,YAAA,OAAA;UAAA,SACZ;QAAc,GAAA,CAAGzC,MAAMJ,MAAK,CAAE,CAAA,CAAQ;MAAA,CAAA;IAIzD;AAEA,UAAMuD,aAAaA,MAAM;AACvB,UAAI,CAAClF,MAAMQ;AAAU,eAAO;AAE5B,aAAAgE,YAAA,OAAA;QAAA,SAAkB;QAAiB,SAAQ;UAAEW,iBAAkB,mBAAkBnF,MAAMQ;QAAY;MAAC,GAAA,IAAA;IACtG;AAEA,UAAM4E,WAAWnD,IAAI,KAAK;AAC1B;AACE,YAAMoD,OAAO3C,MAAMzC,aAAa2C,SAAO;AACrC,YAAIA,KAAK;AAEP0C,gCAAsB,MAAM;AAC1BA,kCAAsB,MAAM;AAC1BF,uBAAS3C,QAAQ;YACnB,CAAC;UACH,CAAC;AACD4C,eAAI;QACN;MACF,CAAC;IACH;AAEAE,cAAU,MAAAC,eAAAhB,YAAAiB,aAAA;MAAA,SAEC,CACL,SACA;QAAE,kBAAkB,CAACL,SAAS3C;MAAM,CAAC;MACtC,SACM;QAAEpB,OAAOqE,cAAc1F,MAAMqB,UAAU,SAASe,aAAaK,QAAQzC,MAAMqB,KAAK;MAAE;MAAC,eAC5EpB,YAAYwC;MAAK,cAClBzC,MAAMI;MAAG,QACfJ,MAAMI,MAAM,QAAQW;IAAS,GAAA;MAMpC4E,YAAYA,MAAAnB,YAAAoB,UAAA,MAAA,CAAApB,YAAAD,SAAA,MAAA,IAAA,GAAAC,YAAAM,gBAAA,MAAA,IAAA,GAAAN,YAAAU,YAAA,MAAA,IAAA,GAAAV,YAAAO,eAAA,MAAA,IAAA,GAAAP,YAAAS,SAAA,MAAA,IAAA,CAAA,CAAA;MASZpE,SAASkB,MAAMlB;IAAO,CAAA,GAAA,CAAA,CAAAgF,iBAAA,WAAA,GAdR;MACZC,SAASnD;MACTjC,SAASV,MAAMU;IACjB,GAAG,MAAI;MAAAqF,MAAA;IAAA,CAAA,CAAA,CAAA,CAaV;AAED,WAAO;MACL/D;MACAE;MACAC;MACAC;MACAC;IACF;EACF;AACF,CAAC;",
  "names": ["useAspectStyles", "props", "aspectStyles", "computed", "ratio", "Number", "aspectRatio", "paddingBottom", "String", "undefined", "VResponsive", "genericComponent", "name", "contentClass", "makeDimensionProps", "setup", "_ref", "slots", "dimensionStyles", "useDimension", "useRender", "_createVNode", "value", "additional", "default", "VImg", "genericComponent", "name", "directives", "intersect", "props", "aspectRatio", "String", "Number", "alt", "cover", "Boolean", "eager", "gradient", "lazySrc", "options", "type", "Object", "default", "root", "undefined", "rootMargin", "threshold", "sizes", "src", "srcset", "width", "makeTransitionProps", "emits", "loadstart", "event", "load", "error", "setup", "_ref", "emit", "slots", "currentSrc", "ref", "image", "state", "naturalWidth", "naturalHeight", "normalisedSrc", "computed", "aspect", "value", "watch", "init", "val", "oldVal", "pollForSize", "onBeforeMount", "isIntersecting", "SUPPORTS_INTERSECTION", "lazyImg", "Image", "nextTick", "complete", "onError", "onLoad", "getSrc", "img", "timer", "timeout", "arguments", "length", "poll", "clearTimeout", "imgHeight", "imgWidth", "window", "setTimeout", "endsWith", "startsWith", "containClasses", "__image", "_createVNode", "sources", "MaybeTransition", "transition", "withDirectives", "vShow", "__preloadImage", "__placeholder", "placeholder", "__error", "__gradient", "backgroundImage", "isBooted", "stop", "requestAnimationFrame", "useRender", "_withDirectives", "VResponsive", "convertToUnit", "additional", "_Fragment", "_resolveDirective", "handler", "once"]
}
